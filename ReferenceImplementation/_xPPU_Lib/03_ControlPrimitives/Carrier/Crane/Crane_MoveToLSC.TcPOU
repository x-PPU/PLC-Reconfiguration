<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Crane_MoveToLSC" Id="{15eba410-d45b-4017-b72a-4a195c431512}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Crane_MoveToLSC EXTENDS Crane_MoveBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// (EProcessVariables.Crane_CylinderRetracted = TRUE) AND ((EProcessVariables.Crane_HoldingWorkpiece = FALSE) OR ((EProcessVariables.LSC_ProductType = 0) AND ((EProcessVariables.RFC_ProductType_1 = 0) AND (EProcessVariables.RFC_ProductType_2 = 0))))
	m_compExpr1: ComparisonExpression(EProcessVariables.Crane_CylinderRetracted, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_compExpr3: ComparisonExpression(EProcessVariables.Crane_HoldingWorkpiece, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr5: ComparisonExpression(EProcessVariables.LSC_ProductType, EComparisonType.equals, EDataType.numeric, FALSE, 0, '', TRUE);
	m_compExpr7: ComparisonExpression(EProcessVariables.RFC_ProductType_1, EComparisonType.equals, EDataType.numeric, FALSE, 0, '', TRUE);
	m_compExpr9: ComparisonExpression(EProcessVariables.RFC_ProductType_2, EComparisonType.equals, EDataType.numeric, FALSE, 0, '', TRUE);
	m_boolExpr10: BoolExpression(m_compExpr7, EBoolOperation.and_op, m_compExpr9);
	m_boolExpr11: BoolExpression(m_compExpr5, EBoolOperation.and_op, m_boolExpr10);
	m_boolExpr12: BoolExpression(m_compExpr3, EBoolOperation.or_op, m_boolExpr11);
	m_precondition: BoolExpression(m_compExpr1, EBoolOperation.and_op, m_boolExpr12);
	
	// EProcessVariables.Crane_AtLSC = TRUE
	m_postcondition: ComparisonExpression(EProcessVariables.Crane_AtLSC, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();]]></ST>
    </Implementation>
    <Method Name="AtTarget" Id="{b47b7b48-b787-416e-b0a5-337e3fb3b22b}">
      <Declaration><![CDATA[METHOD AtTarget : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AtTarget := m_ptrCrane^.AtConveyor;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{cce78632-047d-49e3-ae7c-01dc75ff6324}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
		
	i_ptrCrane: POINTER TO Crane;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrCrane := i_ptrCrane;

m_id := EPrimitives.Crane_MoveToLSC;
m_timeout := T#30S;

Precondition := m_precondition;
Postcondition := m_postcondition;

m_initDirection := TRUE;	//TRUE: Clockwise
m_targetTimeout := T#10S;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Crane_MoveToLSC">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Crane_MoveToLSC.AtTarget">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Crane_MoveToLSC.FB_init">
      <LineId Id="10" Count="5" />
      <LineId Id="7" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>