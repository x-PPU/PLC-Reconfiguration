<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Crane_PickUpWP" Id="{c6ee90db-10e5-4113-a0c3-db35ef248192}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Crane_PickUpWP EXTENDS ControlPrimitiveBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	m_ptrCrane: POINTER TO Crane;
	
	m_step: INT := 0;
	m_timer: TON;
	
	// (EProcessVariables.Crane_HoldingWorkpiece = FALSE) AND (EProcessVariables.Crane_CylinderRetracted = TRUE)
	m_compExpr55: ComparisonExpression(EProcessVariables.Crane_HoldingWorkpiece, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr57: ComparisonExpression(EProcessVariables.Crane_CylinderRetracted, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_precondition: BoolExpression(m_compExpr55, EBoolOperation.and_op, m_compExpr57);
	
	// (EProcessVariables.Crane_HoldingWorkpiece = TRUE) AND (EProcessVariables.Crane_CylinderRetracted = TRUE)
	m_compExpr60: ComparisonExpression(EProcessVariables.Crane_HoldingWorkpiece, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_compExpr62: ComparisonExpression(EProcessVariables.Crane_CylinderRetracted, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_postcondition: BoolExpression(m_compExpr60, EBoolOperation.and_op, m_compExpr62);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{50072af3-d62e-4a70-9b25-f213f2be3b99}">
      <Declaration><![CDATA[METHOD Abort : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrCrane^.o_MonostableCylinder.METH_Retract();
IF m_ptrCrane^.o_VacuumGripper.WPTaken THEN
	m_ptrCrane^.o_VacuumGripper.METH_Intake();
ELSE
	m_ptrCrane^.o_VacuumGripper.METH_Release();
END_IF
Abort := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteInternal" Id="{c86ef8f0-fe75-45e9-a32a-7c4c49e828ec}">
      <Declaration><![CDATA[(* Execution logic of this Control Primitive. *)
METHOD PROTECTED  ExecuteInternal : BOOL
VAR_INPUT
	i_params: ParameterSet;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE m_step OF

	0:	// extend
		m_ptrCrane^.o_MonostableCylinder.METH_Extend();
		IF m_ptrCrane^.o_MonostableCylinder.Extended THEN
			m_step := 1;
		END_IF
	
	1:	// grip
		m_ptrCrane^.o_VacuumGripper.METH_Intake();
		m_timer(IN := TRUE, PT := T#1S);
		IF m_timer.Q THEN
			m_timer(IN := FALSE);
			m_step := 2;
		END_IF
	
	2:	// retract
		m_ptrCrane^.o_MonostableCylinder.METH_Retract();
		IF m_ptrCrane^.o_MonostableCylinder.Retracted THEN
			m_step := 0;
			ExecuteInternal := TRUE;
		END_IF	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2e89f0b2-f1d6-4d93-afa1-07c4c7e0d1fa}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	i_ptrCrane: POINTER TO Crane;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrCrane := i_ptrCrane;

m_id := EPrimitives.Crane_PickUpWP;
m_timeout := T#20S;

Precondition := m_precondition;
Postcondition := m_postcondition;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Crane_PickUpWP">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Crane_PickUpWP.Abort">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="Crane_PickUpWP.ExecuteInternal">
      <LineId Id="24" Count="1" />
      <LineId Id="8" Count="6" />
      <LineId Id="28" Count="4" />
      <LineId Id="17" Count="6" />
      <LineId Id="7" Count="0" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="Crane_PickUpWP.FB_init">
      <LineId Id="11" Count="5" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>