<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="SSC_TransferWorkpieceTo_RFC" Id="{e19592f3-3c23-489d-9346-06c48e8c2afe}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SSC_TransferWorkpieceTo_RFC EXTENDS SSC_MoveWorkpiece_Base
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// (EProcessVariables.PAC_WPAtStart = FALSE) AND ((EProcessVariables.PAC_WPAtEnd = TRUE) AND ((EProcessVariables.PicAlpha_HoldingWorkpiece = FALSE) AND ((EProcessVariables.PicAlpha_CylinderRetracted = TRUE) AND ((EProcessVariables.RFC_ProductType_1 = 0) AND (EProcessVariables.RFC_ProductType_2 = 0)))))
	m_compExpr242: ComparisonExpression(EProcessVariables.PAC_WPAtStart, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr244: ComparisonExpression(EProcessVariables.PAC_WPAtEnd, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_compExpr246: ComparisonExpression(EProcessVariables.PicAlpha_HoldingWorkpiece, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr248: ComparisonExpression(EProcessVariables.PicAlpha_CylinderRetracted, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_compExpr250: ComparisonExpression(EProcessVariables.RFC_ProductType_1, EComparisonType.equals, EDataType.numeric, FALSE, 0, '', TRUE);
	m_compExpr252: ComparisonExpression(EProcessVariables.RFC_ProductType_2, EComparisonType.equals, EDataType.numeric, FALSE, 0, '', TRUE);
	m_boolExpr253: BoolExpression(m_compExpr250, EBoolOperation.and_op, m_compExpr252);
	m_boolExpr254: BoolExpression(m_compExpr248, EBoolOperation.and_op, m_boolExpr253);
	m_boolExpr255: BoolExpression(m_compExpr246, EBoolOperation.and_op, m_boolExpr254);
	m_boolExpr256: BoolExpression(m_compExpr244, EBoolOperation.and_op, m_boolExpr255);
	m_precondition: BoolExpression(m_compExpr242, EBoolOperation.and_op, m_boolExpr256);
	
	// TRUE
	m_postcondition: ValueExpression(EDataType.binary, TRUE, 0, '', TRUE);
	
	m_timer : TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();]]></ST>
    </Implementation>
    <Method Name="AtTarget" Id="{d25f41b2-d890-4d7b-a2c1-fe51f5b84745}">
      <Declaration><![CDATA[METHOD PROTECTED  AtTarget : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//AtTarget := FALSE;
m_TurnSwitch := TRUE;


IF NOT m_ptrSSC^.WPAtRampEnd THEN
	m_timer(IN := TRUE, PT := T#3500MS);
	IF m_timer.Q THEN
		m_timer(IN := FALSE);
		m_TurnSwitch := FALSE;
		AtTarget := TRUE;
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{f8dbe361-44e1-42d3-838b-e9aa577f7856}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	i_ptrSSC: POINTER TO SmallSortingConveyor;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrSSC := i_ptrSSC;

m_id := EPrimitives.SSC_TransferWorkpieceTo_RFC;
m_timeout := T#200S;

Precondition := m_precondition;
Postcondition := m_postcondition;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="SSC_TransferWorkpieceTo_RFC">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SSC_TransferWorkpieceTo_RFC.AtTarget">
      <LineId Id="5" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="18" Count="2" />
      <LineId Id="26" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SSC_TransferWorkpieceTo_RFC.FB_init">
      <LineId Id="10" Count="6" />
    </LineIds>
  </POU>
</TcPlcObject>