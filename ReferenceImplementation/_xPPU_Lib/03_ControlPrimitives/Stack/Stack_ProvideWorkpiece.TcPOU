<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Stack_ProvideWorkpiece" Id="{7ced3050-e4f9-4d36-8554-657714711ef3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Stack_ProvideWorkpiece EXTENDS ControlPrimitiveBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// (EProcessVariables.Stack_WorkpieceAvailable = FALSE) AND ((EProcessVariables.Crane_AtStack = FALSE) OR ((EProcessVariables.Crane_AtStack = TRUE) AND (EProcessVariables.Crane_HoldingWorkpiece = FALSE)))
	m_compExpr260: ComparisonExpression(EProcessVariables.Stack_WorkpieceAvailable, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr262: ComparisonExpression(EProcessVariables.Crane_AtStack, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_compExpr264: ComparisonExpression(EProcessVariables.Crane_AtStack, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	m_compExpr266: ComparisonExpression(EProcessVariables.Crane_HoldingWorkpiece, EComparisonType.equals, EDataType.binary, FALSE, 0, '', TRUE);
	m_boolExpr267: BoolExpression(m_compExpr264, EBoolOperation.and_op, m_compExpr266);
	m_boolExpr268: BoolExpression(m_compExpr262, EBoolOperation.or_op, m_boolExpr267);
	m_precondition: BoolExpression(m_compExpr260, EBoolOperation.and_op, m_boolExpr268);
	
	// EProcessVariables.Stack_WorkpieceAvailable = TRUE
	m_postcondition: ComparisonExpression(EProcessVariables.Stack_WorkpieceAvailable, EComparisonType.equals, EDataType.binary, TRUE, 0, '', TRUE);
	
	m_ptrStack: POINTER TO Stack;

	m_step: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{9b6dc58f-89f1-428a-8875-b973a82f0c1e}">
      <Declaration><![CDATA[METHOD Abort : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrStack^.o_slidingCylinder.METH_Retract();
Abort := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecuteInternal" Id="{dd4fa806-4f8b-4ece-b8fa-1f8df69a10ce}">
      <Declaration><![CDATA[(* Execution logic of this Control Primitive. *)
METHOD PROTECTED  ExecuteInternal : BOOL
VAR_INPUT
	i_params: ParameterSet;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE m_step OF
	0: // extend
	m_ptrStack^.o_slidingCylinder.METH_Extend();
	IF m_ptrStack^.o_slidingCylinder.Extended THEN
		m_step := 1;
	END_IF
	
	1: // retract
	m_ptrStack^.o_slidingCylinder.METH_Retract();
	IF m_ptrStack^.o_slidingCylinder.Retracted THEN
		ExecuteInternal := TRUE;
		m_step := 0;
	END_IF
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{8e5db1d8-9716-4b4a-a1ae-859bc626f12e}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	i_ptrStack: POINTER TO Stack;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrStack := i_ptrStack;

m_id := EPrimitives.Stack_ProvideWorkpiece;
m_timeout := T#5S;

Precondition := m_precondition;
Postcondition := m_postcondition;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="Stack_ProvideWorkpiece">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Stack_ProvideWorkpiece.Abort">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Stack_ProvideWorkpiece.ExecuteInternal">
      <LineId Id="7" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="8" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="Stack_ProvideWorkpiece.FB_init">
      <LineId Id="10" Count="5" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>