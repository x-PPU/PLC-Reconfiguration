<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ObserveStack" Id="{486ad608-7670-4a46-be68-3129ff7847f4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ObserveStack EXTENDS HardwareObservationBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	m_ptrStack: POINTER TO Stack;
	m_ptrStackWP: POINTER TO xPPUProduct;
	
	m_rtPresent: R_TRIG;
	m_rtLight: R_TRIG;
	m_rtMetal: R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{3c4742fa-36b2-4b1d-9138-ddf77a52c251}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)

	i_ptrStack: POINTER TO Stack;
	i_ptrWP: POINTER TO IProduct;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_ptrStack := i_ptrStack;
IF NOT __QUERYPOINTER(i_ptrWP^, m_ptrStackWP) THEN
	FB_init := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ResetDefinition" Id="{9f74f777-c0b1-491e-bfee-41628a59ea39}">
      <Declaration><![CDATA[METHOD  ResetDefinition : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[;]]></ST>
      </Implementation>
    </Method>
    <Method Name="UpdateProcessObservation" Id="{7817ad32-9b15-4a55-ba2c-9bdf7f27bd75}">
      <Declaration><![CDATA[(* Update an instance of ProcessState with the part of the process that can be observed by this Hardware Interface. *)
METHOD UpdateProcessObservation : BOOL
VAR_IN_OUT
	io_processState: ProcessState;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[io_processState.UpdateState_Binary(EProcessVariables.Stack_WorkpieceAvailable, m_ptrStack^.WPOnTray, i_force := TRUE);

io_processState.UpdateState_Defined(EProcessVariables.Stack_WorkpieceAvailable, TRUE);

// update WP info (if there are sensors available), then update the process variables list
m_rtPresent(CLK := m_ptrStack^.WPOnTray);
m_rtLight(CLK := m_ptrStack^.LightWPOnTray);
m_rtMetal(CLK := m_ptrStack^.MetalWPOnTray);
IF m_rtPresent.Q THEN
	m_ptrStackWP^.IsPresent := TRUE;
END_IF
IF m_rtLight.Q THEN
	m_ptrStackWP^.IsLight := TRUE;
END_IF
IF m_rtMetal.Q THEN
	m_ptrStackWP^.IsMetal := TRUE;
END_IF
io_processState.UpdateState_Numeric(EProcessVariables.Stack_ProductType, UINT_TO_LREAL(m_ptrStackWP^.Material), TRUE);
io_processState.UpdateState_Defined(EProcessVariables.Stack_ProductType, TRUE);
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="ObserveStack">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="ObserveStack.FB_init">
      <LineId Id="25" Count="3" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="ObserveStack.ResetDefinition">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="ObserveStack.UpdateProcessObservation">
      <LineId Id="22" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="55" Count="1" />
      <LineId Id="54" Count="0" />
      <LineId Id="44" Count="9" />
      <LineId Id="62" Count="0" />
      <LineId Id="34" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>